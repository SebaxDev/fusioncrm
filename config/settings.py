"""
Configuraci√≥n central de la aplicaci√≥n
Versi√≥n 3.1 - Optimizado para Render con GOOGLE_SHEETS_CREDENTIALS
"""

import os
import json
import streamlit as st

from google.oauth2.service_account import Credentials
import gspread

# --------------------------
# DETECCI√ìN DE ENTORNO (RENDER vs LOCAL)
# --------------------------
IS_RENDER = 'RENDER' in os.environ or 'PORT' in os.environ
IS_DEVELOPMENT = not IS_RENDER

# --------------------------
# CONFIGURACI√ìN DE GOOGLE SHEETS
# --------------------------
# ID de la hoja
SHEET_ID = os.environ.get(
    "GOOGLE_SHEET_ID",
    "13R_3Mdr25Jd-nGhK7CxdcbKkFWLc0LPdYrOLOY8sZJo"  # valor por defecto en desarrollo
)

WORKSHEET_RECLAMOS = "Reclamos"
WORKSHEET_CLIENTES = "Clientes"
WORKSHEET_USUARIOS = "usuarios"
WORKSHEET_NOTIFICACIONES = "Notificaciones"

MAX_NOTIFICATIONS = 15  # Aumentado para mejor UX en CRM

# Cargar credenciales desde variable de entorno en Render
def get_gspread_client():
    """Devuelve un cliente autorizado de gspread"""
    creds_json = os.environ.get("GOOGLE_SHEETS_CREDENTIALS")
    if creds_json:
        creds_dict = json.loads(creds_json)
        scopes = [
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/drive",
        ]
        creds = Credentials.from_service_account_info(creds_dict, scopes=scopes)
        return gspread.authorize(creds)

    # Fallback para desarrollo local con secrets.toml
    if "google_sheets" in st.secrets:
        creds_dict = dict(st.secrets["google_sheets"])
        scopes = [
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/drive",
        ]
        creds = Credentials.from_service_account_info(creds_dict, scopes=scopes)
        return gspread.authorize(creds)

    raise RuntimeError("No se encontraron credenciales de Google Sheets")

# --------------------------
# NOTIFICACIONES
# --------------------------
NOTIFICATION_TYPES = {
    "unassigned_claim": {"priority": "alta", "icon": "‚è±Ô∏è", "color": "#FF6B6B"},
    "status_change": {"priority": "media", "icon": "üîÑ", "color": "#4ECDC4"},
    "duplicate_claim": {"priority": "alta", "icon": "‚ö†Ô∏è", "color": "#FFE66D"},
    "new_assignment": {"priority": "media", "icon": "üìå", "color": "#45B7D1"},
    "client_update": {"priority": "baja", "icon": "‚úèÔ∏è", "color": "#96CEB4"},
    "daily_reminder": {"priority": "baja", "icon": "üìÖ", "color": "#FECA57"},
    "nuevo_reclamo": {"priority": "media", "icon": "üÜï", "color": "#54A0FF"},
    "reclamo_asignado": {"priority": "media", "icon": "üë∑", "color": "#5F27CD"},
    "trabajo_asignado": {"priority": "media", "icon": "üõ†Ô∏è", "color": "#FF9FF3"},
    "cierre_exitoso": {"priority": "media", "icon": "‚úÖ", "color": "#10AC84"},
    "alerta_urgente": {"priority": "critica", "icon": "üö®", "color": "#EE5A24"},
}

COLUMNAS_NOTIFICACIONES = [
    "ID", "Tipo", "Prioridad", "Mensaje", 
    "Usuario_Destino", "ID_Reclamo", "Fecha_Hora", "Le√≠da", "Acci√≥n", "Color"
]

# --------------------------
# ESTRUCTURAS DE DATOS MEJORADAS
# --------------------------
COLUMNAS_RECLAMOS = [
    "Fecha y hora", "N¬∫ Cliente", "Sector", "Nombre", 
    "Direcci√≥n", "Tel√©fono", "Tipo de reclamo", "Detalles", 
    "Estado", "T√©cnico", "N¬∞ de Precinto", "Atendido por", 
    "Fecha_formateada", "ID Reclamo", "Prioridad", "Notas", "Materiales_Utilizados"
]

COLUMNAS_CLIENTES = [
    "N¬∫ Cliente", "Sector", "Nombre", "Direcci√≥n", 
    "Tel√©fono", "N¬∞ de Precinto", "ID Cliente", "√öltima Modificaci√≥n",
    "Email", "Observaciones", "Historial_Reclamos"
]

COLUMNAS_USUARIOS = [
    "username", "password", "nombre", "rol", "activo", "modo_oscuro",
    "email", "telefono", "sector_asignado", "ultimo_acceso", "permisos_especiales"
]

# --------------------------
# IDENTIFICADORES √öNICOS
# --------------------------
COLUMNA_ID_RECLAMO = "ID Reclamo"
COLUMNA_ID_CLIENTE = "ID Cliente"

# --------------------------
# ROLES Y PERMISOS MEJORADOS
# --------------------------
PERMISOS_POR_ROL = {
    'admin': {
        'descripcion': 'Administrador del sistema - Acceso completo',
        'permisos': ['*'],
        'color': '#FF5733',
        'icon': 'üëë'
    },
    'supervisor': {
        'descripcion': 'Supervisor t√©cnico - Gesti√≥n de equipos',
        'permisos': [
            'inicio', 'reclamos_cargados', 'seguimiento_tecnico', 
            'cierre_reclamos', 'dashboard', 'reportes', 'gestion_equipos'
        ],
        'color': '#338AFF',
        'icon': 'üëî'
    },
    'tecnico': {
        'descripcion': 'T√©cnico de campo - Ejecuci√≥n de trabajos',
        'permisos': [
            'inicio', 'reclamos_cargados', 'seguimiento_tecnico', 
            'cierre_reclamos', 'mi_agenda'
        ],
        'color': '#33D1FF',
        'icon': 'üîß'
    },
    'oficina': {
        'descripcion': 'Personal administrativo - Atenci√≥n al cliente',
        'permisos': [
            'inicio', 'reclamos_cargados', 'gestion_clientes',
            'imprimir_reclamos', 'dashboard'
        ],
        'color': '#9D33FF',
        'icon': 'üíº'
    },
    'consulta': {
        'descripcion': 'Usuario de solo consulta - Visualizaci√≥n',
        'permisos': [
            'inicio', 'reclamos_cargados', 'dashboard'
        ],
        'color': '#FF33A8',
        'icon': 'üëÄ'
    }
}

# Mapeo de opciones de navegaci√≥n a permisos
OPCIONES_PERMISOS = {
    "Inicio": "inicio",
    "Dashboard": "dashboard",
    "Reclamos cargados": "reclamos_cargados",
    "Gesti√≥n de clientes": "gestion_clientes",
    "Imprimir reclamos": "imprimir_reclamos",
    "Seguimiento t√©cnico": "seguimiento_tecnico",
    "Cierre de Reclamos": "cierre_reclamos",
    "Reportes": "reportes",
    "Mi Agenda": "mi_agenda",
    "Gesti√≥n de Equipos": "gestion_equipos",
    "Configuraci√≥n": "configuracion"
}

# --------------------------
# CONFIGURACI√ìN DE LA APLICACI√ìN
# --------------------------
SECTORES_DISPONIBLES = [str(n) for n in range(1, 18)] + ["OTRO"]

TECNICOS_DISPONIBLES = [
    "Braian", "Conejo", "Juan", "Junior", "Maxi", 
    "Ramon", "Roque", "Viki", "Oficina", "Base", "Externo"
]

TIPOS_RECLAMO = [
    "Conexion C+I", "Conexion Cable", "Conexion Internet", "Suma Internet",
    "Suma Cable", "Reconexion", "Reconexion C+I", "Reconexion Internet", "Reconexion Cable", "Sin Se√±al Ambos", "Sin Se√±al Cable",
    "Sin Se√±al Internet", "Sintonia", "Interferencia", "Traslado",
    "Extension", "Extension x2", "Extension x3", "Extension x4", "Cambio de Ficha",
    "Cambio de Equipo", "Reclamo", "Cambio de Plan", "Desconexion a Pedido",
    "Mantenimiento Preventivo", "Instalaci√≥n Especial", "Consulta T√©cnica"
]

# Prioridades para reclamos
PRIORIDADES_RECLAMO = [
    "Baja", "Normal", "Alta", "Urgente", "Cr√≠tica"
]

# --------------------------
# MATERIALES Y EQUIPOS MEJORADOS
# --------------------------
ROUTER_POR_SECTOR = {
    "1": "huawei", "2": "huawei", "3": "huawei", "4": "huawei", "5": "huawei",
    "6": "vsol", "7": "vsol", "8": "vsol", "9": "huawei", "10": "huawei",
    "11": "vsol", "12": "huawei", "13": "huawei", "14": "vsol", "15": "huawei",
    "16": "huawei", "17": "huawei", "OTRO": "huawei"
}

MATERIALES_POR_RECLAMO = {
    "Conexion C+I": {"router_catv": 1, "conector": 2, "ficha_f": 2, "cable_coaxial": 10},
    "Conexion Cable": {"ficha_f": 2, "micro": 1, "cable_coaxial": 5},
    "Conexion Internet": {"router_internet": 1, "conector": 2, "cable_red": 10},
    "Suma Internet": {"router_catv": 1, "conector": 2, "ficha_f": 2, "cable_coaxial": 8},
    "Suma Cable": {"router_catv": 1, "ficha_f": 2, "cable_coaxial": 6},
    "Reconexion": {"ficha_f": 1},
    "Reconexion C+I": {"router_catv": 1, "conector": 2, "cable_coaxial": 3},
    "Reconexion Internet": {"router_internet": 1, "conector": 2, "cable_red": 3},
    "Reconexion Cable": {"ficha_f": 2, "micro": 1, "cable_coaxial": 3},
    "Sin Se√±al Ambos": {"conector": 1, "ficha_f": 1},
    "Sin Se√±al Cable": {"ficha_f": 2, "micro": 1, "cable_coaxial": 4},
    "Sin Se√±al Internet": {"conector": 1, "cable_red": 4},
    "Sintonia": {"ficha_f": 1},
    "Interferencia": {"ficha_f": 2, "filtro": 1},
    "Traslado": {"conector": 2, "ficha_f": 2, "cable_coaxial": 15},
    "Extension": {"cable_coaxial": 10},
    "Extension x2": {"derivador_x2": 1, "ficha_f": 4, "cable_coaxial": 8},
    "Extension x3": {"derivador_x3": 1, "ficha_f": 4, "cable_coaxial": 12},
    "Extension x4": {"derivador_x4": 1, "ficha_f": 8, "cable_coaxial": 16},
    "Cambio de Ficha": {"conector": 1, "ficha_f": 1, "micro": 1},
    "Cambio de Equipo": {"router": 1},
    "Reclamo": {"materiales_variables": 1},
    "Cambio de Plan": {},
    "Desconexion a Pedido": {},
    "Mantenimiento Preventivo": {"limpiador": 1, "ficha_f": 2},
    "Instalaci√≥n Especial": {"materiales_especiales": 1, "cable_coaxial": 20},
    "Consulta T√©cnica": {}
}

# --------------------------
# CONFIGURACI√ìN DE RENDIMIENTO PARA RENDER
# --------------------------
if IS_RENDER:
    API_DELAY = 1.5  # Menor delay en producci√≥n
    BATCH_DELAY = 1.5
    CACHE_TTL = 45  # Segundos para cache en producci√≥n
    MAX_ROWS_PER_PAGE = 50  # Paginaci√≥n para mejor rendimiento
else:
    API_DELAY = 2.0  # Mayor delay en desarrollo
    BATCH_DELAY = 2.0
    CACHE_TTL = 30
    MAX_ROWS_PER_PAGE = 100

SESSION_TIMEOUT = 2700  # 45 minutos de inactividad

# --------------------------
# CONFIGURACI√ìN DE ESTILOS CRM
# --------------------------
COLOR_PALETTE = {
    'primary': '#2563EB',      # Azul profesional
    'secondary': '#8B5CF6',    # P√∫rpura
    'success': '#059669',      # Verde
    'warning': '#D97706',      # √Åmbar
    'error': '#DC2626',        # Rojo
    'info': '#0891B2',         # Cian
    'dark': '#1E293B',         # Gris oscuro
    'light': '#F8FAFC'         # Gris claro
}

THEME_CONFIG = {
    'light': {
        'bg_primary': '#FFFFFF',
        'bg_secondary': '#F8FAFC',
        'text_primary': '#1E293B',
        'text_secondary': '#475569'
    },
    'dark': {
        'bg_primary': '#272822',    # Monokai dark
        'bg_secondary': '#2D2E27',
        'text_primary': '#F8F8F2',
        'text_secondary': '#CFCFC2'
    }
}

# --------------------------
# FUNCIONES DE UTILIDAD MEJORADAS
# --------------------------
def obtener_permisos_por_rol(rol):
    """Devuelve los permisos asociados a un rol"""
    return PERMISOS_POR_ROL.get(rol, {}).get('permisos', [])

def rol_tiene_permiso(rol, permiso_requerido):
    """Verifica si un rol tiene un permiso espec√≠fico"""
    if permiso_requerido == 'admin':
        return rol == 'admin'
    
    permisos = obtener_permisos_por_rol(rol)
    return '*' in permisos or permiso_requerido in permisos

def get_role_config(rol):
    """Obtiene la configuraci√≥n completa de un rol"""
    return PERMISOS_POR_ROL.get(rol, {
        'descripcion': 'Rol no definido',
        'permisos': [],
        'color': '#64748B',
        'icon': '‚ùì'
    })

def is_cloud_environment():
    """Determina si la aplicaci√≥n se ejecuta en un entorno cloud"""
    return IS_RENDER

# --------------------------
# CONFIGURACI√ìN DE DEPURACI√ìN
# --------------------------
DEBUG_MODE = os.environ.get('DEBUG_MODE', 'False').lower() == 'true'

# --------------------------
# CONFIGURACI√ìN DE BACKUP Y LOGGING
# --------------------------
if IS_RENDER:
    LOG_LEVEL = 'INFO'
    BACKUP_ENABLED = True
    AUTO_SAVE_INTERVAL = 300  # 5 minutos
else:
    LOG_LEVEL = 'DEBUG'
    BACKUP_ENABLED = False
    AUTO_SAVE_INTERVAL = 180  # 3 minutos

# --------------------------
# VALORES POR DEFECTO PARA NUEVOS REGISTROS
# --------------------------
DEFAULT_VALUES = {
    'estado_reclamo': 'Pendiente',
    'prioridad_reclamo': 'Normal',
    'tecnico_asignado': 'Sin asignar',
    'sector_cliente': 'OTRO',
    'rol_usuario': 'consulta',
    'activo_usuario': True,
    'modo_oscuro': False
}

# --------------------------
# LIMITES Y RESTRICCIONES
# --------------------------
MAX_CLIENTES_POR_PAGINA = 100
MAX_RECLAMOS_POR_PAGINA = 50
MAX_USUARIOS_POR_PAGINA = 30
MAX_HISTORIAL_CLIENTE = 20

# --------------------------
# CONFIGURACI√ìN DE EXPORTACI√ìN
# --------------------------
EXPORT_FORMATS = ['PDF', 'Excel', 'CSV', 'Imagen']
EXPORT_DEFAULT = 'PDF'